"""
팜솔라 워크스페이스 템플릿 정의
- 12주/1년/6주 코스별 폴더 구조
- 기본 템플릿 파일들
- 과제 및 실습 템플릿
"""

import os
from typing import Dict, List
from datetime import datetime

class WorkspaceTemplate:
    """팜솔라 워크스페이스 템플릿 클래스"""
    
    def __init__(self):
        self.base_structure = {
            "팜솔라_교과서": {
                "description": "팜솔라 AI 교육과정 메인 폴더",
                "subfolders": {
                    "12주과정": self._get_12week_structure(),
                    "1년과정": self._get_1year_structure(), 
                    "6주과정": self._get_6week_structure(),
                    "과제제출": {
                        "description": "과제 제출 폴더",
                        "template_files": ["과제_템플릿.md", "README.md", "제출_가이드.md"]
                    },
                    "프로젝트": {
                        "description": "개인 프로젝트 폴더", 
                        "template_files": ["프로젝트_계획서.md", "진행상황.md", "회고록.md"]
                    },
                    "리소스": {
                        "description": "학습 리소스 모음",
                        "subfolders": {
                            "참고자료": {
                                "template_files": ["북마크.md", "유용한_링크.md"]
                            },
                            "코드예제": {
                                "template_files": ["기본_템플릿.py", "프롬프트_예제.txt", "API_사용법.py"]
                            },
                            "이미지": {
                                "template_files": ["이미지_가이드.md"]
                            }
                        }
                    },
                    "개인노트": {
                        "description": "개인 학습 노트",
                        "template_files": ["학습일지.md", "질문모음.md", "아이디어_노트.md"]
                    }
                }
            }
        }
    
    def _get_12week_structure(self) -> Dict:
        """12주 코스 구조 정의"""
        structure = {
            "description": "12주 단기 집중 과정",
            "subfolders": {}
        }
        
        # 1~12주차 폴더 생성
        for week in range(1, 13):
            week_folder = f"{week}주차"
            structure["subfolders"][week_folder] = {
                "description": f"{week}주차 학습 자료",
                "subfolders": {
                    "1교시": {
                        "template_files": [
                            f"{week}주차1교시_교과서.md",
                            f"{week}주차1교시_강의대사.md", 
                            f"{week}주차1교시_과제.md",
                            f"{week}주차1교시_실습.md"
                        ]
                    },
                    "2교시": {
                        "template_files": [
                            f"{week}주차2교시_교과서.md",
                            f"{week}주차2교시_강의대사.md",
                            f"{week}주차2교시_과제.md", 
                            f"{week}주차2교시_실습.md"
                        ]
                    }
                }
            }
        
        return structure
    
    def _get_1year_structure(self) -> Dict:
        """1년 코스 구조 정의"""
        structure = {
            "description": "1년 장기 심화 과정", 
            "subfolders": {}
        }
        
        # 1~52주차 폴더 생성
        for week in range(1, 53):
            week_folder = f"{week}주차"
            structure["subfolders"][week_folder] = {
                "description": f"{week}주차 학습 자료",
                "subfolders": {
                    "1교시": {
                        "template_files": [
                            f"{week}주차1교시_교과서.md",
                            f"{week}주차1교시_강의대사.md",
                            f"{week}주차1교시_과제.md",
                            f"{week}주차1교시_실습.md"
                        ]
                    },
                    "2교시": {
                        "template_files": [
                            f"{week}주차2교시_교과서.md", 
                            f"{week}주차2교시_강의대사.md",
                            f"{week}주차2교시_과제.md",
                            f"{week}주차2교시_실습.md"
                        ]
                    }
                }
            }
        
        return structure
    
    def _get_6week_structure(self) -> Dict:
        """6주 코스 구조 정의"""
        structure = {
            "description": "6주 기초 입문 과정",
            "subfolders": {}
        }
        
        # 1~6주차 폴더 생성
        for week in range(1, 7):
            week_folder = f"{week}주차"
            structure["subfolders"][week_folder] = {
                "description": f"{week}주차 학습 자료",
                "subfolders": {
                    "1교시": {
                        "template_files": [
                            f"{week}주차1교시_교과서.md",
                            f"{week}주차1교시_강의대사.md",
                            f"{week}주차1교시_과제.md",
                            f"{week}주차1교시_실습.md"
                        ]
                    },
                    "2교시": {
                        "template_files": [
                            f"{week}주차2교시_교과서.md",
                            f"{week}주차2교시_강의대사.md", 
                            f"{week}주차2교시_과제.md",
                            f"{week}주차2교시_실습.md"
                        ]
                    }
                }
            }
        
        return structure
    
    def get_template_content(self, file_type: str, week: int, session: int) -> str:
        """템플릿 파일 내용 생성 (확장 버전)"""
        current_date = datetime.now().strftime("%Y-%m-%d")
        
        templates = {
            "교과서": f"""# {week}주차 {session}교시 교과서

## 📚 학습 목표
- [ ] 이번 시간에 배울 내용을 정리해보세요
- [ ] 실습을 통해 익힐 기술을 명시하세요
- [ ] 과제를 통해 달성할 역량을 설정하세요

## 🔑 주요 개념
### 개념 1: 핵심 이론
- **정의**: 개념의 정의를 작성하세요
- **특징**: 주요 특징들을 나열하세요
- **활용**: 실제 활용 방법을 설명하세요

### 개념 2: 실무 적용
- **사례**: 실제 사례를 들어 설명하세요
- **주의사항**: 유의할 점들을 정리하세요
- **팁**: 효과적인 사용 팁을 공유하세요

## 💻 실습 예제
### 기본 실습
```python
# 기본 코드 예제를 작성하세요
print("Hello, 팜솔라!")

# 주석으로 설명을 추가하세요
def example_function():
    '''
    함수 설명을 작성하세요
    '''
    pass
```

### 심화 실습
```python
# 심화 코드 예제
class ExampleClass:
    def __init__(self):
        self.name = "팜솔라"
    
    def advanced_method(self):
        return f"Advanced example from {{self.name}}"
```

## 🎯 실습 체크리스트
- [ ] 기본 개념 이해하기
- [ ] 코드 실행해보기
- [ ] 변형해서 테스트하기
- [ ] 문제 해결하기
- [ ] 응용 사례 생각해보기

## 📝 요약
### 핵심 포인트
1. **첫 번째 핵심**: 간단한 설명
2. **두 번째 핵심**: 간단한 설명
3. **세 번째 핵심**: 간단한 설명

### 다음 시간 예고
- 다음에 배울 내용을 미리 안내하세요

---
📅 생성일: {current_date}  
👨‍🏫 강사: [강사명]  
🎓 과정: {week}주차 {session}교시
""",
            
            "강의대사": f"""# {week}주차 {session}교시 강의대사

## 🎬 도입 (5분)
### 인사 및 출석 확인
- "안녕하세요! 팜솔라 {week}주차 {session}교시 시간입니다."
- "지난 시간에 배운 내용 중 기억나는 것이 있나요?"

### 오늘의 학습 목표 제시
- "오늘은 [주요 주제]에 대해 배워보겠습니다."
- "이번 시간이 끝나면 [구체적 목표]를 할 수 있게 됩니다."

## 📖 본강의 (20분)
### 1단계: 개념 설명 (7분)
**강사 멘트:**
- "먼저 [핵심 개념]이 무엇인지 알아보겠습니다."
- "이 개념이 중요한 이유는..."
- "실제로 어떻게 사용되는지 예를 들어보면..."

**학생 참여 유도:**
- "혹시 [관련 경험]을 해보신 분 있나요?"
- "어떤 느낌이 드시나요?"

### 2단계: 실습 진행 (10분)
**실습 안내:**
- "이제 직접 해보겠습니다. 화면을 잘 보세요."
- "단계별로 따라해보세요."
- "잘 안 되는 분은 손을 들어주세요."

**실습 중 멘트:**
- "여기서 주의할 점은..."
- "만약 오류가 나면..."
- "잘 따라오고 계시나요?"

### 3단계: 질의응답 (3분)
**질문 유도:**
- "궁금한 점이 있으신가요?"
- "어려운 부분이 있다면 말씀해주세요."
- "추가로 알고 싶은 내용이 있나요?"

## 🎯 마무리 (5분)
### 오늘 배운 내용 정리
- "오늘은 [핵심 내용 1], [핵심 내용 2]를 배웠습니다."
- "특히 [중요 포인트]를 기억해주세요."

### 다음 시간 예고
- "다음 시간에는 [다음 주제]를 다룰 예정입니다."
- "오늘 배운 내용을 바탕으로 [연결점]을 설명드리겠습니다."

### 과제 안내
- "과제는 [구체적 과제 내용]입니다."
- "제출 기한은 [날짜]이고, [제출 방법]으로 제출하세요."

## 📋 강의 체크리스트
- [ ] 출석 확인 완료
- [ ] 학습 목표 제시 완료
- [ ] 핵심 개념 설명 완료
- [ ] 실습 진행 완료
- [ ] 질의응답 시간 확보
- [ ] 내용 정리 완료
- [ ] 과제 안내 완료

## 💡 강의 팁
### 학생 참여 유도 방법
- 간단한 질문으로 시작하기
- 실습 중간중간 확인하기
- 어려워하는 학생 개별 도움

### 시간 관리
- 각 단계별 시간 엄수
- 질의응답 시간 충분히 확보
- 여유 시간 활용 방안 준비

---
📅 생성일: {current_date}  
👨‍🏫 강사: [강사명]  
⏱️ 총 시간: 30분  
🎓 과정: {week}주차 {session}교시
""",
            
            "과제": f"""# {week}주차 {session}교시 과제

## 🎯 과제 제목
**{week}주차 {session}교시 실습 과제: [구체적 과제명]**

## 📋 과제 설명
### 과제 목표
- 이번 과제를 통해 [학습 목표]를 달성합니다
- [구체적 기술/개념]을 실제로 적용해봅니다
- [실무 역량]을 기를 수 있습니다

### 과제 내용
1. **1단계**: [첫 번째 단계 설명]
   - 구체적인 작업 내용
   - 예상 소요 시간: [시간]

2. **2단계**: [두 번째 단계 설명]
   - 구체적인 작업 내용
   - 예상 소요 시간: [시간]

3. **3단계**: [세 번째 단계 설명]
   - 구체적인 작업 내용
   - 예상 소요 시간: [시간]

## 📤 제출 방법
### 제출 형식
```
📝 과제 제출 템플릿

**과제명**: {week}주차 {session}교시 과제
**제출자**: [이름]
**제출일**: {current_date}

## 1단계 결과
[작업 내용 및 결과물]

## 2단계 결과
[작업 내용 및 결과물]

## 3단계 결과
[작업 내용 및 결과물]

## 학습 소감
- 어려웠던 점:
- 새로 배운 점:
- 추가 질문:

## 첨부 파일
- [파일명1]
- [파일명2]
```

### 제출 방법
- **텔레그램 봇**: `/submit [과제내용]` 명령어 사용
- **구글 드라이브**: 자동으로 개인 워크스페이스에 저장됨
- **제출 기한**: [구체적 날짜 및 시간]

## ✅ 평가 기준
| 항목 | 배점 | 평가 기준 |
|------|------|-----------|
| **완성도** | 40점 | 모든 단계를 완료했는가? |
| **정확성** | 30점 | 요구사항을 정확히 이해했는가? |
| **창의성** | 20점 | 독창적인 아이디어가 있는가? |
| **성찰** | 10점 | 학습 소감이 충실한가? |

### 등급 기준
- **A+ (90-100점)**: 모든 요구사항을 완벽히 충족하고 창의적 요소 포함
- **A (80-89점)**: 대부분의 요구사항을 충족하고 완성도가 높음
- **B+ (70-79점)**: 기본 요구사항을 충족하나 일부 미흡한 부분 존재
- **B (60-69점)**: 최소 요구사항은 충족하나 개선이 필요
- **C (60점 미만)**: 요구사항 미충족, 재제출 필요

## 💡 과제 팁
### 성공적인 과제 수행을 위한 조언
1. **계획 세우기**: 단계별로 시간을 배분하세요
2. **자료 수집**: 필요한 정보를 미리 준비하세요
3. **중간 점검**: 각 단계마다 결과를 확인하세요
4. **질문하기**: 막히는 부분은 바로 질문하세요
5. **정리하기**: 배운 내용을 정리하며 마무리하세요

### 자주 하는 실수
- ❌ 요구사항을 제대로 읽지 않기
- ❌ 단계를 건너뛰고 진행하기
- ❌ 결과물만 제출하고 과정 생략하기
- ❌ 학습 소감을 대충 작성하기

## 🆘 도움이 필요할 때
### 질문 방법
- **텔레그램**: 언제든 봇에게 질문하세요
- **이메일**: [이메일 주소]
- **오피스아워**: [시간 및 장소]

### 참고 자료
- [유용한 링크 1]
- [유용한 링크 2]
- [추천 도서/영상]

---
📅 생성일: {current_date}  
📤 제출 기한: [날짜]  
👨‍🏫 담당 강사: [강사명]  
🎓 과정: {week}주차 {session}교시
""",
            
            "실습": f"""# {week}주차 {session}교시 실습

## 🛠️ 실습 제목
**{week}주차 {session}교시 실습: [구체적 실습명]**

## 🎯 실습 목표
- [ ] [구체적 학습 목표 1]
- [ ] [구체적 학습 목표 2]
- [ ] [구체적 학습 목표 3]

## 📋 사전 준비사항
### 필요한 도구
- [ ] 컴퓨터 (Windows/Mac/Linux)
- [ ] 인터넷 연결
- [ ] [특정 소프트웨어]
- [ ] [기타 필요 도구]

### 사전 지식
- [필요한 기본 지식 1]
- [필요한 기본 지식 2]
- [이전 실습과의 연관성]

## 🚀 실습 단계

### Step 1: 환경 설정 (5분)
**목표**: 실습 환경을 준비합니다

```bash
# 터미널 명령어 예시
cd workspace
mkdir practice_{week}_{session}
cd practice_{week}_{session}
```

**체크포인트**:
- [ ] 폴더가 정상적으로 생성되었나요?
- [ ] 필요한 파일들이 준비되었나요?

### Step 2: 기본 실습 (10분)
**목표**: 핵심 개념을 실제로 적용해봅니다

```python
# Python 코드 예시
def practice_function():
    '''
    실습용 함수입니다
    여기에 실습 코드를 작성하세요
    '''
    print("실습 시작!")
    
    # TODO: 실습 내용을 채워넣으세요
    pass

# 함수 실행
practice_function()
```

**체크포인트**:
- [ ] 코드가 오류 없이 실행되나요?
- [ ] 예상한 결과가 나오나요?

### Step 3: 응용 실습 (10분)
**목표**: 배운 내용을 응용해봅니다

**실습 과제**:
1. 기본 코드를 수정해보세요
2. 새로운 기능을 추가해보세요
3. 다른 방법으로 구현해보세요

**힌트**:
- [유용한 힌트 1]
- [유용한 힌트 2]
- [문제 해결 방법]

### Step 4: 검증 및 정리 (5분)
**목표**: 실습 결과를 확인하고 정리합니다

**검증 체크리스트**:
- [ ] 모든 단계를 완료했나요?
- [ ] 코드가 정상 작동하나요?
- [ ] 목표를 달성했나요?

## 🐛 문제 해결 가이드
### 자주 발생하는 오류
1. **오류 유형 1**: [오류 설명]
   - **원인**: [원인 설명]
   - **해결방법**: [해결 방법]

2. **오류 유형 2**: [오류 설명]
   - **원인**: [원인 설명]
   - **해결방법**: [해결 방법]

### 디버깅 팁
- `print()` 함수로 중간 결과 확인하기
- 에러 메시지 자세히 읽기
- 코드를 단계별로 나누어 테스트하기

## 🎉 실습 완료 후
### 추가 도전 과제
- [ ] [심화 과제 1]
- [ ] [심화 과제 2]
- [ ] [창의적 응용 과제]

### 학습 정리
**오늘 배운 것**:
- [핵심 내용 1]
- [핵심 내용 2]
- [핵심 내용 3]

**어려웠던 점**:
- [어려운 점 1]
- [어려운 점 2]

**다음에 더 알아보고 싶은 것**:
- [관심 주제 1]
- [관심 주제 2]

## 📚 참고 자료
### 추가 학습 자료
- [공식 문서 링크]
- [유용한 튜토리얼]
- [관련 영상 강의]

### 커뮤니티
- [관련 커뮤니티 1]
- [관련 커뮤니티 2]
- [질문할 수 있는 곳]

---
📅 생성일: {current_date}  
⏱️ 예상 소요 시간: 30분  
🎯 난이도: [초급/중급/고급]  
👨‍🏫 담당 강사: [강사명]
"""
        }

        return templates.get(file_type, f"# {week}주차 {session}교시 {file_type}\n\n내용을 작성하세요.\n\n---\n생성일: {current_date}")

    def get_advanced_template_content(self, file_type: str) -> str:
        """고급 템플릿 파일 내용 생성"""
        current_date = datetime.now().strftime("%Y-%m-%d")
        
        advanced_templates = {
            "과제_템플릿": f"""# 📝 과제 제출 템플릿

## 기본 정보
- **과제명**: [과제명을 입력하세요]
- **제출자**: [이름을 입력하세요]
- **제출일**: {current_date}
- **주차**: [주차를 입력하세요]
- **교시**: [교시를 입력하세요]

## 📋 과제 내용

### 1. 문제 이해
- **문제**: [과제에서 요구하는 것을 정리하세요]
- **목표**: [달성해야 할 목표를 명시하세요]
- **제약조건**: [지켜야 할 조건들을 나열하세요]

### 2. 해결 과정
```python
# 코드 작성 영역
# 단계별로 주석을 달아 설명하세요

# Step 1: [첫 번째 단계 설명]
# 코드 작성

# Step 2: [두 번째 단계 설명]
# 코드 작성

# Step 3: [세 번째 단계 설명]
# 코드 작성
```

### 3. 결과 분석
- **결과**: [실행 결과를 설명하세요]
- **검증**: [결과가 올바른지 확인 방법]
- **개선점**: [더 나은 방법이 있다면 제시]

## 🤔 학습 소감
### 새로 배운 점
- [이번 과제를 통해 새로 알게 된 내용]

### 어려웠던 점
- [어려웠던 부분과 해결 과정]

### 추가 질문
- [더 알고 싶은 내용이나 궁금한 점]

## 📎 첨부 파일
- [관련 파일이 있다면 목록 작성]

---
✅ 체크리스트
- [ ] 모든 요구사항을 충족했나요?
- [ ] 코드에 주석을 충분히 달았나요?
- [ ] 결과를 정확히 분석했나요?
- [ ] 학습 소감을 성실히 작성했나요?
""",
            
            "학습일지": f"""# 📚 팜솔라 학습일지

## 📅 오늘의 학습 ({current_date})

### 🎯 학습 목표
- [ ] [오늘 달성하고자 하는 목표 1]
- [ ] [오늘 달성하고자 하는 목표 2]
- [ ] [오늘 달성하고자 하는 목표 3]

### 📖 학습 내용
#### 주요 개념
- **개념 1**: [간단한 설명]
- **개념 2**: [간단한 설명]
- **개념 3**: [간단한 설명]

#### 실습 내용
```python
# 오늘 작성한 코드나 실습 내용
# 중요한 부분에는 주석 추가
```

#### 새로 알게 된 것
- [새로운 지식 1]
- [새로운 지식 2]
- [새로운 지식 3]

### 🤔 어려웠던 점
- **문제**: [어려웠던 내용]
  - **해결 과정**: [어떻게 해결했는지]
  - **배운 점**: [이를 통해 배운 것]

### 💡 아이디어 및 응용
- [학습 내용을 응용할 수 있는 아이디어]
- [실제 프로젝트에 적용할 방법]
- [추가로 탐구해보고 싶은 주제]

### ⭐ 오늘의 성취
- [오늘 달성한 것들]
- [성공적으로 완료한 과제나 실습]
- [극복한 어려움들]

### 📝 내일의 계획
- [ ] [내일 학습할 내용]
- [ ] [복습이 필요한 부분]
- [ ] [추가로 연습할 것]

### 🔗 유용한 자료
- [오늘 찾은 유용한 링크나 자료]
- [참고한 문서나 튜토리얼]
- [도움이 된 커뮤니티 글]

---
## 📊 학습 통계
- **학습 시간**: [오늘 학습한 시간]
- **완료한 과제**: [완료한 과제 수]
- **해결한 문제**: [해결한 문제 수]
- **만족도**: ⭐⭐⭐⭐⭐ (5점 만점)

## 💭 한 줄 소감
> [오늘 학습에 대한 한 줄 소감]
""",
            
            "프로젝트_계획서": f"""# 🚀 개인 프로젝트 계획서

## 📋 프로젝트 개요
- **프로젝트명**: [프로젝트 이름]
- **작성자**: [이름]
- **작성일**: {current_date}
- **예상 기간**: [시작일] ~ [종료일]

## 🎯 프로젝트 목표
### 주요 목표
- [달성하고자 하는 주요 목표 1]
- [달성하고자 하는 주요 목표 2]
- [달성하고자 하는 주요 목표 3]

### 세부 목표
- [ ] [구체적인 세부 목표 1]
- [ ] [구체적인 세부 목표 2]
- [ ] [구체적인 세부 목표 3]

## 🔍 배경 및 동기
### 프로젝트 선택 이유
- [왜 이 프로젝트를 선택했는지]
- [어떤 문제를 해결하고자 하는지]
- [기대하는 학습 효과는 무엇인지]

### 관련 기술 및 지식
- **필요한 기술**: [사용할 기술들]
- **현재 수준**: [현재 보유한 지식 수준]
- **학습이 필요한 부분**: [추가로 배워야 할 것들]

## 📊 프로젝트 범위
### 포함할 기능
1. **핵심 기능 1**: [기능 설명]
2. **핵심 기능 2**: [기능 설명]
3. **부가 기능 1**: [기능 설명]

### 제외할 기능
- [이번 프로젝트에서는 다루지 않을 기능들]
- [나중에 추가할 수 있는 기능들]

## 📅 일정 계획
### 1단계: 기획 및 설계 ([날짜])
- [ ] 요구사항 정리
- [ ] 시스템 설계
- [ ] 기술 스택 선정
- [ ] 개발 환경 구축

### 2단계: 핵심 기능 개발 ([날짜])
- [ ] [핵심 기능 1] 개발
- [ ] [핵심 기능 2] 개발
- [ ] 기본 테스트

### 3단계: 부가 기능 및 완성 ([날짜])
- [ ] [부가 기능] 개발
- [ ] 통합 테스트
- [ ] 문서화
- [ ] 최종 점검

## 🛠️ 기술 스택
### 개발 언어
- **주 언어**: [Python/JavaScript/etc.]
- **보조 언어**: [필요시]

### 프레임워크 및 라이브러리
- [사용할 프레임워크]
- [필요한 라이브러리들]

### 도구 및 환경
- **개발 환경**: [IDE/에디터]
- **버전 관리**: [Git/GitHub]
- **배포 환경**: [필요시]

## 📈 성공 기준
### 정량적 기준
- [ ] 모든 핵심 기능이 정상 작동
- [ ] 테스트 커버리지 [%] 이상
- [ ] 성능 기준 [구체적 수치] 달성

### 정성적 기준
- [ ] 사용자 친화적인 인터페이스
- [ ] 코드의 가독성 및 유지보수성
- [ ] 프로젝트를 통한 학습 목표 달성

## 🚨 위험 요소 및 대응책
### 예상 위험
1. **기술적 어려움**
   - 위험: [구체적 위험 요소]
   - 대응: [대응 방안]

2. **시간 부족**
   - 위험: [일정 지연 가능성]
   - 대응: [우선순위 조정 방안]

### 백업 계획
- [계획 A가 실패할 경우의 대안]
- [최소한으로 달성해야 할 목표]

## 📚 학습 계획
### 추가 학습이 필요한 영역
- [학습할 기술 1]: [학습 방법 및 자료]
- [학습할 기술 2]: [학습 방법 및 자료]

### 참고 자료
- [관련 문서 및 튜토리얼]
- [참고할 오픈소스 프로젝트]
- [도움을 받을 수 있는 커뮤니티]

## 📝 진행 상황 추적
### 주간 체크포인트
- **1주차**: [달성 목표]
- **2주차**: [달성 목표]
- **3주차**: [달성 목표]
- **4주차**: [달성 목표]

### 진행률 측정 방법
- [어떻게 진행률을 측정할 것인지]
- [중간 점검 방법]

---
## ✅ 체크리스트
- [ ] 프로젝트 목표가 명확한가?
- [ ] 일정이 현실적인가?
- [ ] 필요한 기술을 파악했는가?
- [ ] 위험 요소를 고려했는가?
- [ ] 성공 기준이 구체적인가?

**📞 도움이 필요할 때**: [연락처 또는 질문할 곳]
"""
        }
        
        return advanced_templates.get(file_type, f"# {file_type}\n\n내용을 작성하세요.\n\n---\n생성일: {current_date}")

# 전역 인스턴스
workspace_template = WorkspaceTemplate() 